#!/usr/bin/env python2
# coding=utf-8


import rospy
import time
from sensor_msgs.msg import JointState

from k3hand import k3hand


k3 = None
last = 0
"""
def callback(data):
    # rospy.loginfo(rospy.get_caller_id() + "%s", data.position)
    print(data.position)
    data_list = []
    for index, value in enumerate(data.position):
        data_list.append(value)
   
    k3.send_radians(data_list)#mycobotに角度を送る（pymycobotで設定した関数）
    #time.sleep(0.5)
"""
def callback(data):
    now=rospy.Time.now()
    dt = now.to_sec() - last.to_sec()
    if dt > 0.5:
        print(data.position)
        data_list = []
        for index, value in enumerate(data.position):
            data_list.append(value)
        k3.send_radians(data_list)#mycobotに角度を送る（pymycobotで設定した関数）
        last = now
        

def listener():
    global k3
    global last
    rospy.init_node("control_slider", anonymous=True)
    last = rospy.Time.now()
    rospy.Subscriber("joint_states", JointState, callback)#JointStateをsubscribe
    
    port = rospy.get_param("~port", "/dev/ttyUSB0")#port のdefault値のjoint_s設定
    baud = rospy.get_param("~baud", 115200)
    print(port, baud)
    k3 = k3hand(port)
    k3.set_speed(80)
    k3.enable_all()
    """
    while not rospy.is_shutdown():
        if last_data is None:
            print("skipped")
        else:
            print(last_data.position)
            data_list = []
            for index, value in enumerate(last_data.position):
                data_list.append(value)
                k3.send_radians(data_list)#mycobotに角度を送る（pymycobotで設定した関数）
        r.sleep()
        rospy.spin()
    """
    # spin() simply keeps python from exiting until this node is stopped
    
    print("spin ...")
 #   rospy.spin()
    k3.disconnect()
    

if __name__ == "__main__":
    listener()
